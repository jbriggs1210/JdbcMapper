/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * $Header:$
 */
package org.apache.beehive.controls.test.junit.event;

import org.apache.beehive.controls.api.bean.Control;
import org.apache.beehive.controls.test.controls.eventsetApt.MulticastExt;
import org.apache.beehive.controls.test.controls.eventsetApt.UnicastExt;
import org.apache.beehive.controls.test.controls.eventsetApt.NoMethodsExt;
import org.apache.beehive.controls.test.controls.eventsetControlExt.EventExt;
import org.apache.beehive.controls.test.controls.emptyeventset.EmptyEvent;
import org.apache.beehive.controls.test.junit.ControlTestCase;

/**
 * Junit tests for making sure that APT can generate controls with eventsets when
 * the extended controls event set has the same name as the base control's event set.
 *
 * If this doesn't work compilation will fail, all thats really necessary here is
 * to verify the controls can be initialized.
 */
public class EventsetAptTest
    extends ControlTestCase {

    @Control
    private MulticastExt _multicastEvts;

    @Control
    private UnicastExt _unicastEvts;

    @Control
    private NoMethodsExt _noMethods;

    @Control
    private EmptyEvent _emptyEvent;

    @Control
    private EventExt _eventExt;

    /**
     * Test multicast event set.
     */
    public void testMulticastEvtApt() {
        assertNotNull(_multicastEvts);
    }

    /**
     * Test unicast event set.
     */
    public void testUnicastEvtApt() {
        assertNotNull(_unicastEvts);
    }

    /**
     * Test to verify that a control extension whose base class contains an event set is
     * properly generated by apt. Failure results in a compilation error. 
     */
    public void testEventExt() {
        assertNotNull(_unicastEvts);
    }

    /**
     * test case for extended control with no interface methods,
     * but an event set with an annotated member.  This is
     * an apt compilation test only.
     */
    public void testNoMethodsEvtSet() {
        assertNotNull(_noMethods);
    }

    /**
     * Test compilation of an event set with no methods.
     */
    public void testEmptyEventSet() {
        assertNotNull(_emptyEvent);
    }
}
