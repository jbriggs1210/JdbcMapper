<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!-- This is the sample Spring definition file used by the Controls-Spring integration -->
<!-- sample webapp. These bean definitions will be used for Controls that are created  -->
<!-- either directly or indirectly by familyTree.jsp                                   -->
<beans>
    <bean id="root" parent="AdultBean">
        <constructor-arg index="1"><value>root</value></constructor-arg>
        <property name="firstName"><value>Don</value></property>
        <property name="lastName"><value>Smith</value></property>
        <property name="age"><value>70</value></property>
        <property name="children">
            <list>
                <value>Jason</value>
                <value>Dean</value>
            </list>
        </property>
    </bean>

    <bean name="root/Jason" parent="AdultBean">
        <constructor-arg index="1"><value>Jason</value></constructor-arg>
        <property name="firstName"><value>Jason</value></property>
        <property name="lastName"><value>Smith</value></property>
        <property name="age"><value>40</value></property>
        <property name="children">
            <list>
                <value>Jane</value>
                <value>Mary</value>
            </list>
        </property>
    </bean>

    <bean name="root/Dean" parent="AdultBean">
        <constructor-arg index="1"><value>Dean</value></constructor-arg>
        <property name="firstName"><value>Dean</value></property>
        <property name="lastName"><value>Smith</value></property>
        <property name="age"><value>42</value></property>
        <property name="children">
            <list>
                <value>Grant</value>
                <value>Megan</value>
            </list>
        </property>
    </bean>


    <!-- This is an example of a match against an absolute control ID.  It will be -->
    <!-- used for the control with an ID of "Jane" nested inside of the control   -->
    <!-- with an ID of "Jason" nested inside of the control with the ID of "root"   -->
    <bean name="root/Jason/Jane" parent="MinorBean">
        <constructor-arg index="1"><value>Jane</value></constructor-arg>
        <property name="firstName"><value>Jane</value></property>
        <property name="lastName"><value>Smith</value></property>
        <property name="age"><value>13</value></property>
        <property name="gender"><value>female</value></property>
    </bean>

    <!-- This is an example of a match against a relative name.   Any PersonBean    -->
    <!-- named "Mary" will use this definition, unless an absolute ID match exists -->
    <bean name="Mary" parent="MinorBean">
        <constructor-arg index="1"><value>Mary</value></constructor-arg>
        <property name="firstName"><value>Mary</value></property>
        <property name="lastName"><value>Smith</value></property>
        <property name="age"><value>11</value></property>
        <property name="gender"><value>female</value></property>
    </bean>

    <!-- This bean definition will be used when instantiating any Person bean that  -->
    <!-- does not have a specific definition.  Note that the defnition name is the  -->
    <!-- bean class name, meaning it will match all beans of this type where a more -->
    <!-- exact id match fails.   This definition will be used when instantiating    -->
    <!-- the beans for root/Dean/Grant and root/Dean/Megan, since no explicit defn  -->
    <!-- exists with these names --> 
    <bean id="org.apache.beehive.samples.spring.control.PersonBean" parent="AdultBean" singleton="false">
        <property name="firstName"><value>Unknown</value></property>
        <property name="lastName"><value>Unknown</value></property>
        <property name="gender"><value>unknown</value></property>
        <property name="age"><value>0</value></property>
    </bean>

    <!-- This bean definition acts as an abstract template for constructing PersonBean -->
    <!-- instances that are implemented as adults.                                     -->
    <!-- In the future, abstract templates such as this one could be auto-generated    -->
    <bean id="AdultBean" class="org.apache.beehive.samples.spring.control.PersonBean" abstract="true" singleton="false" >
        <constructor-arg index="0"><null/></constructor-arg>
        <constructor-arg index="1"><null/></constructor-arg> 
        <constructor-arg index="2"><null/></constructor-arg>
        <property name="controlImplementation">
            <value>org.apache.beehive.samples.spring.control.AdultImpl</value>
        </property>
    </bean>

    <!-- This bean definition acts as an abstract template for constructing PersonBean -->
    <!-- instances that are implemented as minors                                      -->
    <bean id="MinorBean" class="org.apache.beehive.samples.spring.control.PersonBean" abstract="true" singleton="false" >
        <constructor-arg index="0"><null/></constructor-arg>
        <constructor-arg index="1"><null/></constructor-arg>
        <constructor-arg index="2"><null/></constructor-arg>
        <property name="controlImplementation">
            <value>org.apache.beehive.samples.spring.control.MinorImpl</value>
        </property>
    </bean>

</beans>
