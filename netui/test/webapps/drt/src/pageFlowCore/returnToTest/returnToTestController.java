/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * $Header:$
 */
// ------------------------------------------------------------------------------
//  Generated by WebLogic Workshop
// 
//  Created on: Sat Jul 19 13:39:36 MDT 2003
//  By: rich
// -----------------------------------------------------------------------------
package pageFlowCore.returnToTest;
import org.apache.beehive.netui.pageflow.Forward;
import org.apache.beehive.netui.pageflow.PageFlowController;
import org.apache.beehive.netui.pageflow.annotations.Jpf;

@Jpf.Controller(
    messageBundles = {
        @Jpf.MessageBundle(
            bundlePath = "returnToTest.Messages") 
    })
public class returnToTestController extends PageFlowController
{
    /**
     * This method represents the point of entry into the pageflow
     * @jpf:action
     * @jpf:forward name="success" path="inputPage.jsp"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                path = "inputPage.jsp") 
        })
    protected Forward begin()
    {
        Forward fwd = new Forward( "success" );
        fwd.addPageInput( "input1", "page input 1" );
        fwd.addPageInput( "input2", "page input 2" );
        InputForm form = new InputForm();
        form.setFoo( "init foo" );
        form.setBar( "init bar" );
        fwd.addOutputForm( form );
        return fwd;
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" path="nextPage.jsp"
     * @jpf:validation-error-forward name="validationFail" return-to="currentPage"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                path = "nextPage.jsp") 
        },
        validationErrorForward=@Jpf.Forward(name="validationFail", navigateTo=Jpf.NavigateTo.currentPage))
    protected Forward input(InputForm form)
    {
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="page"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                navigateTo = Jpf.NavigateTo.page) 
        })
    protected Forward returnToPage()
    {
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                navigateTo = Jpf.NavigateTo.currentPage) 
        })
    protected Forward returnToCurrentPage()
    {
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                navigateTo = Jpf.NavigateTo.currentPage) 
        })
    protected Forward returnToCurrentPageWithForm( InputForm form )
    {
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="page"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                navigateTo = Jpf.NavigateTo.page) 
        })
    protected Forward returnToPageWithForm( InputForm form )
    {
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="previousPage"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                navigateTo = Jpf.NavigateTo.previousPage) 
        })
    protected Forward returnToPreviousPageWithForm( InputForm form )
    {
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="previousPage"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                navigateTo = Jpf.NavigateTo.previousPage) 
        })
    protected Forward returnToPreviousPage()
    {
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                navigateTo = Jpf.NavigateTo.currentPage) 
        })
    protected Forward returnToCurrentPageOverrideInputs()
    {
        Forward fwd = new Forward( "success", "input1", "overridden #1" );
        fwd.addPageInput( "input2", "overridden #2" );
        return fwd;
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                navigateTo = Jpf.NavigateTo.currentPage) 
        })
    protected Forward returnToCurrentPageOverrideForm()
    {
        InputForm overrideForm = new InputForm();
        overrideForm.setFoo( "override foo" );
        overrideForm.setBar( "override bar" );
        return new Forward("success", overrideForm);
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="previousPage"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                navigateTo = Jpf.NavigateTo.previousPage) 
        })
    protected Forward returnToPreviousPageOverrideInputs()
    {
        Forward fwd = new Forward( "success", "input1", "overridden #1" );
        fwd.addPageInput( "input2", "overridden #2" );
        return fwd;
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="previousPage"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                navigateTo = Jpf.NavigateTo.previousPage) 
        })
    protected Forward returnToPreviousPageOverrideForm()
    {
        InputForm overrideForm = new InputForm();
        overrideForm.setFoo( "override foo" );
        overrideForm.setBar( "override bar" );
        return new Forward("success", overrideForm);
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="page"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                navigateTo = Jpf.NavigateTo.page) 
        })
    protected Forward returnToPageOverrideInputs()
    {
        Forward fwd = new Forward( "success", "input1", "overridden #1" );
        fwd.addPageInput( "input2", "overridden #2" );
        return fwd;
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="page"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                navigateTo = Jpf.NavigateTo.page) 
        })
    protected Forward returnToPageOverrideForm()
    {
        InputForm overrideForm = new InputForm();
        overrideForm.setFoo( "override foo" );
        overrideForm.setBar( "override bar" );
        return new Forward("success", overrideForm);
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" path="nested/nestedController.jpf"
     */
    @Jpf.Action(
        forwards = {
            @Jpf.Forward(
                name = "success",
                path = "nested/nestedController.jpf") 
        })
    protected Forward goNested()
    {
        return new Forward("success");
    }
}
